services:
  localstack:
    image: localstack/localstack:${LOCALSTACK_VERSION:-3.5.0}
    ports:
      - "4566:4566"
      - "4510-4559:4510-4559" # Necessário para versões mais recentes do LocalStack
    environment:
      - SERVICES=dynamodb
      # - DEBUG=1 # Habilite apenas se precisar depurar o LocalStack
    volumes:
      # Mapeia o diretório de inicialização para o local correto dentro do container.
      # O script criarDynamo.sh deve estar neste diretório para ser executado.
      - ./local:/etc/localstack/init/ready.d
      # Opcional: mantém os dados do LocalStack entre as execuções.
      - ./localstack_data:/var/lib/localstack
    networks:
      - sojoga-net
    healthcheck:
      # Este healthcheck verifica o endpoint de saúde do LocalStack, que só responde com sucesso
      # após os scripts de inicialização (como a criação da tabela) serem concluídos.
      test: ["CMD", "curl", "-f", "http://localhost:4566/_localstack/health"]
      interval: 5s
      timeout: 2s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT:-8787}:${BACKEND_PORT:-8787}"
    environment:
      # Sobrescreve as propriedades para conectar ao LocalStack dentro da rede do Docker
      - SPRING_CLOUD_AWS_DYNAMODB_ENDPOINT=http://localstack:4566
      # Define valores padrão para a região e credenciais, evitando a necessidade de um .env
      - SPRING_CLOUD_AWS_REGION_STATIC=sa-east-1
      - SPRING_CLOUD_AWS_CREDENTIALS_ACCESS-KEY=test
      - SPRING_CLOUD_AWS_CREDENTIALS_SECRET-KEY=test
      # Garante que a aplicação Spring Boot inicie na mesma porta usada pelo healthcheck.
      - SERVER_PORT=${BACKEND_PORT:-8787}
    depends_on:
      localstack:
        # Agora o backend espera o LocalStack estar completamente pronto (incluindo a tabela).
        condition: service_healthy
    networks:
      - sojoga-net
    healthcheck:
      # Testa se a aplicação está respondendo no endpoint de saúde do Actuator
      test: ["CMD", "curl", "-f", "http://localhost:${BACKEND_PORT:-8787}/actuator/health"]
      interval: 15s
      timeout: 5s
      retries: 5
      start_period: 30s # Dá 30 segundos para a aplicação iniciar antes de começar os checks

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "${FRONTEND_PORT:-8080}:80" # Acesse o frontend em http://localhost:8080
    depends_on:
      localstack:
        condition: service_healthy
    networks:
      - sojoga-net

networks:
  sojoga-net:
    driver: bridge