# .github/workflows/terraform-deploy.yml

name: 'Terraform Deploy PROD'

on:
  push:
    branches:
      - main # Dispara SOMENTE em push para a branch main

jobs:
  deploy-prod:
    name: 'Deploy Infra to Produção'
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    environment: 
      name: producao # Aponta para o Environment do GitHub
      url: 'http://sojoga.com.br' # Opcional: URL do ambiente de produção

    env:
      JWT_SECRET_ARN: ${{ secrets.JWT_SECRET_ARN }}

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_PROD}}
          aws-region: sa-east-1

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Terraform Workspace'
        run: terraform workspace select -or-create prod

      - name: 'Find Path and Run Import Script'
        run: |
          chmod +x ../.github/scripts/import_resources.sh
          TF_PATH=$(which terraform)
          ../.github/scripts/import_resources.sh "$TF_PATH"

      - name: 'Terraform Plan'
        run: terraform plan -var="environment=prod" -var="jwt_secret_arn=${{ env.JWT_SECRET_ARN }}" -out=tfplan

      - name: 'Terraform Apply'
        run: |
          echo "::group::Pre-Apply Debug"
          echo "JWT Secret ARN: ${{ env.JWT_SECRET_ARN }}"
          echo "Environment: prod"
          echo "::endgroup::"
          terraform apply -auto-approve tfplan
          echo "::notice::JAR Path being used: $JAR_PATH"
          echo "::notice::Terraform apply completed - ECS resources created"
