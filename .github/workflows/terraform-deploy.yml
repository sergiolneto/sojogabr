# .github/workflows/terraform-deploy.yml

name: 'Terraform Deploy PROD'

on:
  push:
    branches:
      - main # Dispara SOMENTE em push para a branch main
  workflow_dispatch:
    inputs:
      action:
        description: 'Ação a ser executada: apply ou destroy'
        required: true
        default: 'apply'
        type: choice
        options:
        - apply
        - destroy

jobs:
  deploy-prod:
    name: 'Deploy Infra to Produção'
    if: |
      (github.ref == 'refs/heads/main' && github.event_name == 'push') ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply')
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    timeout-minutes: 60 # Aumenta o tempo máximo de execução do job
    environment: 
      name: producao # Aponta para o Environment do GitHub
      url: 'https://sojogabr.eu.org' # URL do ambiente de produção

    env:
      JWT_SECRET_ARN: ${{ secrets.JWT_SECRET_ARN }}

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_PROD}}
          role-duration-seconds: 7200 # Aumenta a duração do token para 2 horas
          aws-region: sa-east-1

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Terraform Workspace'
        run: terraform workspace select -or-create prod

      - name: 'Install AWS CLI'
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install --update

      - name: 'Run Import Script'
        run: |
          chmod +x ../.github/scripts/import_resources.sh
          TF_PATH=$(which terraform)
          ../.github/scripts/import_resources.sh "$TF_PATH"

      - name: 'Terraform Plan'
        run: terraform plan -var="environment=prod" -var="jwt_secret_arn=${{ env.JWT_SECRET_ARN }}" -out=tfplan

      - name: 'Terraform Apply'
        run: terraform apply -auto-approve tfplan

  destroy-prod:
    name: 'Destroy Infra de Produção'
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'destroy'
    permissions:
      id-token: write
      contents: read
    runs-on: ubuntu-latest
    environment:
      name: producao

    env:
      JWT_SECRET_ARN: ${{ secrets.JWT_SECRET_ARN }}

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_PROD}}
          aws-region: sa-east-1

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: 'Terraform Init'
        run: terraform init

      - name: 'Terraform Workspace'
        run: terraform workspace select -or-create prod

      - name: 'Terraform Destroy'
        run: terraform destroy -auto-approve -var="environment=prod" -var="jwt_secret_arn=${{ env.JWT_SECRET_ARN }}"