name: Deploy App to AWS PROD

# Gatilho: Este workflow agora é acionado QUANDO o workflow 'Terraform Deploy PROD' termina com sucesso na branch 'main'.
on:
  workflow_run:
    workflows: ["Terraform Deploy PROD"]
    types:
      - completed
    branches:
      - main

jobs:
  deploy-prod:
    name: Deploy App to Produção
    # Condição: Só executa o job se o workflow que o acionou (Terraform) foi concluído com sucesso.
    if: github.event.workflow_run.conclusion == 'success'
    runs-on: ubuntu-latest
    environment: producao
    permissions:
      id-token: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Faz o checkout do commit exato que disparou o workflow do Terraform, garantindo consistência.
          ref: ${{ github.event.workflow_run.head_sha }}

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN_PROD }}
          aws-region: sa-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sojoga-backend-prod # Nome base do repositório
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: "Download task definition"
        run: |
          aws ecs describe-task-definition --task-definition sojoga-backend-prod-task \
            --query taskDefinition > task-definition.json

      - name: "Fill in the new image ID in the Amazon ECS task definition"
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: task-definition.json
          container-name: sojoga-backend-container # O nome do container na sua task definition
          image: ${{ steps.login-ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}

      - name: "Deploy Amazon ECS task definition"
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: sojoga-backend-prod-service # Nome do serviço criado pelo Terraform
          cluster: sojoga-cluster-prod # Nome do cluster criado pelo Terraform
          wait-for-service-stability: true
