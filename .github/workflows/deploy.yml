name: Deploy SojogaBR to AWS

on:
  push:
    branches:
      - develop  # Dispara na branch de HOM
      - main     # Dispara na branch de PROD

jobs:
  # --- JOB PARA HOMOLOGAÇÃO ---
  deploy-hom:
    if: github.ref == 'refs/heads/develop' # Só executa se o push for na branch develop
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1 # Sua região da AWS

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sojoga-backend-hom # Repositório para HOM
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to Amazon ECS
        # Aqui você usaria a AWS CLI para atualizar seu serviço ECS de HOM
        # para usar a nova imagem que acabamos de enviar.
        run: echo "Deploying to HOM..."

  # --- JOB PARA PRODUÇÃO ---
  deploy-prod:
    if: github.ref == 'refs/heads/main' # Só executa se o push for na branch main
    runs-on: ubuntu-latest
    environment: production # Usa o ambiente "production" do GitHub para regras de proteção
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: sa-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: sojoga-backend-prod # Repositório para PROD
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Deploy to Amazon ECS
        run: echo "Deploying to PROD..."
